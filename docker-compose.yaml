services:
    redis:
        container_name: ${APP_NAME}-redis
        build:
            dockerfile: ./.docker/redis/Dockerfile

    db:
        container_name: ${APP_NAME}-db
        image: mariadb:10.11
        working_dir: /application
        command: [ mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_general_ci, --innodb-file-per-table=1 ]
        volumes:
            - pimcore-database:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_PORT=${MYSQL_PORT}
        healthcheck:
            # The service is considered healthy when:
            # - connection to pimcore db can be established, and
            # - we can run a simple SQL query.
            test: [ "CMD-SHELL", "mysql -h db -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE -e 'SHOW TABLES;'" ]
            interval: 10s
            retries: 6
            start_period: 1m
            timeout: 3s
        ports:
            - "${DATABASE_PORT_EXTERNAL}:${MYSQL_PORT}"

    init:
        container_name: ${APP_NAME}-init
        build:
            dockerfile: ./.docker/Dockerfile
            target: init
        depends_on:
            db:
                condition: service_healthy
        env_file:
            -   .env
        volumes:
            - .:/var/www/html
            - ./.docker/init/init.local.sh:/init.local.sh
        command: [ "/init.local.sh" ]

    php:
        container_name: ${APP_NAME}-php
        build:
          dockerfile: ./.docker/Dockerfile
          target: php
        environment:
          COMPOSER_HOME: /var/www/html
        env_file:
            -   .env
        depends_on:
            init:
                condition: service_completed_successfully
        ports:
            - "${WEB_PORT_EXTERNAL}:80"
        volumes:
            - .:/var/www/html
            - ./.docker/php-debug/nginx-debug.conf:/etc/nginx/sites-available/default:ro

    php-debug:
        container_name: ${APP_NAME}-php-debug
        build:
            dockerfile: ./.docker/Dockerfile
            target: php-debug
        environment:
            - XDEBUG_CONFIG=remote_enable=1
            - PHP_IDE_CONFIG=serverName=localhost
        env_file:
            - .env
        depends_on:
            init:
                condition: service_completed_successfully
        volumes:
            - .:/var/www/html

    supervisord:
        container_name: ${APP_NAME}-supervisord
        build:
            dockerfile: ./.docker/Dockerfile
            target: supervisord
        depends_on:
            init:
                condition: service_completed_successfully
        env_file:
            -   .env
        volumes:
            - .:/var/www/html
            - ./.docker/supervisord/supervisord.conf:/etc/supervisor/conf.d/pimcore.conf:ro

    # The following two services are used for testing.
    # We restrict these services to the test profile only, so we don't spin them up with every `docker compose up`.
    # See: https://docs.docker.com/compose/profiles/
    test-db:
        profiles: [ 'test' ]
        extends: db
        volumes:
            - pimcore-test-database:/var/lib/mysql

    test-php:
        profiles: [ 'test' ]
        extends: php
        environment:
            APP_ENV: test
            PIMCORE_TEST_DB_DSN: ${PIMCORE_TEST_DB_DSN:-mysql://pimcore:pimcore@test-db/pimcore}
            PIMCORE_INSTALL_ADMIN_USERNAME: pimcore
            PIMCORE_INSTALL_ADMIN_PASSWORD: pimcore
            PIMCORE_INSTALL_MYSQL_HOST_SOCKET: test-db
        depends_on:
            test-db:
                condition: service_healthy
        volumes:
            - pimcore-test-var:/var/www/html/var
            - pimcore-test-public-var:/var/www/html/public/var

volumes:
    pimcore-database:
    pimcore-test-database:
    pimcore-test-var:
    pimcore-test-public-var:
